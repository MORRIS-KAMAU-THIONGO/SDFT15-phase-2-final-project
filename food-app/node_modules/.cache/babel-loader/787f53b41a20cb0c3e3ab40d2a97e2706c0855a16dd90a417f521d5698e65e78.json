{"ast":null,"code":"var _jsxFileName = \"/home/morrislinux/desktop/documents/Moringa-Projects/phase-2/SDFT15-phase-2-final-project/food-app/src/CartContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// Create the Cart Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the Cart Context\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n\n// Cart Provider Component\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  // State to hold cart items\n  const [cartItems, setCartItems] = useState([]);\n\n  // Function to add an item to the cart\n  const addToCart = item => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(cartItem => cartItem.id === item.id);\n      if (existingItem) {\n        // If item already exists, increase quantity\n        return prevItems.map(cartItem => cartItem.id === item.id ? {\n          ...cartItem,\n          quantity: cartItem.quantity + 1\n        } : cartItem);\n      } else {\n        // If item doesn't exist, add it with quantity 1\n        return [...prevItems, {\n          ...item,\n          quantity: 1\n        }];\n      }\n    });\n  };\n\n  // Function to remove an item from the cart\n  const removeFromCart = id => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== id));\n  };\n\n  // Function to clear the entire cart\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  // Function to get the total price of items in the cart\n  const getTotalPrice = () => {\n    return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n\n  // Function to get the total number of items in the cart\n  const getTotalItems = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  // Context value object\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    clearCart,\n    getTotalPrice,\n    getTotalItems\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","CartContext","useCart","_s","context","Error","CartProvider","children","_s2","cartItems","setCartItems","addToCart","item","prevItems","existingItem","find","cartItem","id","map","quantity","removeFromCart","filter","clearCart","getTotalPrice","reduce","total","price","getTotalItems","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/morrislinux/desktop/documents/Moringa-Projects/phase-2/SDFT15-phase-2-final-project/food-app/src/CartContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\n// Create the Cart Context\nconst CartContext = createContext();\n\n// Custom hook to use the Cart Context\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n\n// Cart Provider Component\nexport const CartProvider = ({ children }) => {\n  // State to hold cart items\n  const [cartItems, setCartItems] = useState([]);\n\n  // Function to add an item to the cart\n  const addToCart = (item) => {\n    setCartItems((prevItems) => {\n      const existingItem = prevItems.find((cartItem) => cartItem.id === item.id);\n      if (existingItem) {\n        // If item already exists, increase quantity\n        return prevItems.map((cartItem) =>\n          cartItem.id === item.id\n            ? { ...cartItem, quantity: cartItem.quantity + 1 }\n            : cartItem\n        );\n      } else {\n        // If item doesn't exist, add it with quantity 1\n        return [...prevItems, { ...item, quantity: 1 }];\n      }\n    });\n  };\n\n  // Function to remove an item from the cart\n  const removeFromCart = (id) => {\n    setCartItems((prevItems) =>\n      prevItems.filter((item) => item.id !== id)\n    );\n  };\n\n  // Function to clear the entire cart\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  // Function to get the total price of items in the cart\n  const getTotalPrice = () => {\n    return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n\n  // Function to get the total number of items in the cart\n  const getTotalItems = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  // Context value object\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    clearCart,\n    getTotalPrice,\n    getTotalItems,\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMM,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGP,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;;AAED;AAAAD,EAAA,CARaD,OAAO;AASpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMa,SAAS,GAAIC,IAAI,IAAK;IAC1BF,YAAY,CAAEG,SAAS,IAAK;MAC1B,MAAMC,YAAY,GAAGD,SAAS,CAACE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,CAAC;MAC1E,IAAIH,YAAY,EAAE;QAChB;QACA,OAAOD,SAAS,CAACK,GAAG,CAAEF,QAAQ,IAC5BA,QAAQ,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,GACnB;UAAE,GAAGD,QAAQ;UAAEG,QAAQ,EAAEH,QAAQ,CAACG,QAAQ,GAAG;QAAE,CAAC,GAChDH,QACN,CAAC;MACH,CAAC,MAAM;QACL;QACA,OAAO,CAAC,GAAGH,SAAS,EAAE;UAAE,GAAGD,IAAI;UAAEO,QAAQ,EAAE;QAAE,CAAC,CAAC;MACjD;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIH,EAAE,IAAK;IAC7BP,YAAY,CAAEG,SAAS,IACrBA,SAAS,CAACQ,MAAM,CAAET,IAAI,IAAKA,IAAI,CAACK,EAAE,KAAKA,EAAE,CAC3C,CAAC;EACH,CAAC;;EAED;EACA,MAAMK,SAAS,GAAGA,CAAA,KAAM;IACtBZ,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;;EAED;EACA,MAAMa,aAAa,GAAGA,CAAA,KAAM;IAC1B,OAAOd,SAAS,CAACe,MAAM,CAAC,CAACC,KAAK,EAAEb,IAAI,KAAKa,KAAK,GAAGb,IAAI,CAACc,KAAK,GAAGd,IAAI,CAACO,QAAQ,EAAE,CAAC,CAAC;EACjF,CAAC;;EAED;EACA,MAAMQ,aAAa,GAAGA,CAAA,KAAM;IAC1B,OAAOlB,SAAS,CAACe,MAAM,CAAC,CAACC,KAAK,EAAEb,IAAI,KAAKa,KAAK,GAAGb,IAAI,CAACO,QAAQ,EAAE,CAAC,CAAC;EACpE,CAAC;;EAED;EACA,MAAMS,KAAK,GAAG;IACZnB,SAAS;IACTE,SAAS;IACTS,cAAc;IACdE,SAAS;IACTC,aAAa;IACbI;EACF,CAAC;EAED,oBACE3B,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAArB,QAAA,EAChCA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzB,GAAA,CA3DWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}